import { a as createComponent, m as maybeRenderHead, e as renderScript, r as renderComponent, b as addAttribute, g as renderTemplate } from '../chunks/astro/server_DVEZg-pu.mjs';
import 'kleur/colors';
import { $ as $$Layout, a as $$Header, d as $$Footer } from '../chunks/Footer_0LvJXvqw.mjs';
import { $ as $$Datetime } from '../chunks/Datetime_USheDwxT.mjs';
import { S as SITE } from '../chunks/config_C2KZyXPG.mjs';
export { renderers } from '../renderers.mjs';

const $$AgentContent$1 = createComponent(async ($$result, $$props, $$slots) => {
  let agentContent = [];
  try {
    const response = await fetch("/api/website/agent-content");
    if (response.ok) {
      agentContent = await response.json();
      console.log("Fetched agent content:", agentContent);
    } else {
      console.error("Failed to fetch agent content:", response.status);
      agentContent = [
        {
          id: 1,
          title: "AI-Generated Market Analysis",
          description: "An analysis of current market trends generated by the Business Assistant LLM agent.",
          publishedAt: (/* @__PURE__ */ new Date()).toISOString(),
          updatedAt: (/* @__PURE__ */ new Date()).toISOString(),
          content: "This is a placeholder for agent-generated content. The API call failed, but in production, this would contain actual content created by your LLM agent through the Strapi CMS integration."
        },
        {
          id: 2,
          title: "Weekly Business Insights",
          description: "Automated insights about your business performance compiled by the agent.",
          publishedAt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1e3).toISOString(),
          // 7 days ago
          updatedAt: (/* @__PURE__ */ new Date()).toISOString(),
          content: "Another placeholder for agent-generated content. The agent would regularly update this with new insights based on your business data."
        }
      ];
    }
  } catch (error) {
    console.error("Error fetching agent content:", error);
    agentContent = [
      {
        id: 1,
        title: "AI-Generated Market Analysis",
        description: "An analysis of current market trends generated by the Business Assistant LLM agent.",
        publishedAt: (/* @__PURE__ */ new Date()).toISOString(),
        updatedAt: (/* @__PURE__ */ new Date()).toISOString(),
        content: "This is a placeholder for agent-generated content. The API call failed, but in production, this would contain actual content created by your LLM agent through the Strapi CMS integration."
      },
      {
        id: 2,
        title: "Weekly Business Insights",
        description: "Automated insights about your business performance compiled by the agent.",
        publishedAt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1e3).toISOString(),
        // 7 days ago
        updatedAt: (/* @__PURE__ */ new Date()).toISOString(),
        content: "Another placeholder for agent-generated content. The agent would regularly update this with new insights based on your business data."
      }
    ];
  }
  return renderTemplate`${maybeRenderHead()}<div class="agent-content"> ${agentContent.map((item) => renderTemplate`<div class="agent-content-item mb-6 pb-6 border-b border-gray-300 dark:border-gray-700"> <h2 class="text-xl font-medium">${item.title}</h2> <div class="flex items-center space-x-2 mt-1 mb-2 text-sm text-gray-500 dark:text-gray-400"> <span>Published: ${renderComponent($$result, "Datetime", $$Datetime, { "datetime": new Date(item.publishedAt) })}</span> <span>â€¢</span> <span>Updated: ${renderComponent($$result, "Datetime", $$Datetime, { "datetime": new Date(item.updatedAt) })}</span> </div> <p class="text-gray-700 dark:text-gray-300">${item.description}</p> ${item.coverImage && renderTemplate`<div class="my-4"> <img${addAttribute(item.coverImage.url, "src")}${addAttribute(item.coverImage.alt || item.title, "alt")}${addAttribute(item.coverImage.width || 800, "width")}${addAttribute(item.coverImage.height || 400, "height")} class="rounded-lg shadow-md"> </div>`} <div class="mt-4 prose dark:prose-invert max-w-none"> <p>${item.content}</p> </div> </div>`)} <div class="mt-8 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg"> <h3 class="text-lg font-medium mb-2">Request New Content</h3> <p class="text-sm mb-4">
Want the AI agent to generate content on a specific topic? Enter your request below:
</p> <div class="flex gap-2"> <input type="text" id="content-topic-input" placeholder="Enter a topic (e.g., 'Market trends in tech')" class="flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"> <button id="request-content-button" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500">
Request Content
</button> </div> </div> <div class="mt-8 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg"> <h3 class="text-lg font-medium mb-2">How This Works</h3> <p class="text-sm">
This page displays content that is automatically generated and managed by the Business Assistant LLM agent.
      The agent connects to the website through the Strapi CMS integration, allowing it to create, update, and
      publish content without human intervention. You can request specific content using the form above.
</p> </div> </div> ${renderScript($$result, "/home/trotsky/Projects/astro-agent-site/src/components/AgentContent.astro?astro&type=script&index=0&lang.ts")}`;
}, "/home/trotsky/Projects/astro-agent-site/src/components/AgentContent.astro", void 0);

const $$AgentContent = createComponent(($$result, $$props, $$slots) => {
  const title = `Agent-Generated Content | ${SITE.title}`;
  const description = "Content generated and managed by the Business Assistant LLM agent";
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": title, "description": description }, { "default": ($$result2) => renderTemplate` ${renderComponent($$result2, "Header", $$Header, { "activeNav": "agent-content" })} ${maybeRenderHead()}<main id="main-content"> <section class="mb-28"> <h1 class="text-2xl font-semibold sm:text-3xl">Agent-Generated Content</h1> <p class="my-4">
This page displays content that has been automatically generated and managed by the
        Business Assistant LLM agent. The agent can create new content, update existing content,
        and respond to user interactions.
</p> <div class="mt-8"> ${renderComponent($$result2, "AgentContent", $$AgentContent$1, {})} </div> </section> </main> ${renderComponent($$result2, "Footer", $$Footer, {})} ` })}`;
}, "/home/trotsky/Projects/astro-agent-site/src/pages/agent-content.astro", void 0);

const $$file = "/home/trotsky/Projects/astro-agent-site/src/pages/agent-content.astro";
const $$url = "/agent-content";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$AgentContent,
  file: $$file,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
